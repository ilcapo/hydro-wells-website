# Generated by Django 5.0.8 on 2025-09-17 00:00
import django.db.models.deletion
import django.utils.text
import django.utils.timezone
from django.db import migrations, models

def populate_blogcategory_slugs(apps, schema_editor):
    """Pobla los slugs existentes basados en el nombre de la categoría."""
    BlogCategory = apps.get_model('home', 'BlogCategory')
    for category in BlogCategory.objects.all():
        if not category.slug:  # Solo si no tiene slug
            # Generar un slug único basado en el nombre
            base_slug = django.utils.text.slugify(category.name)
            slug = base_slug
            counter = 1
            # Verificar si el slug ya existe y hacerlo único si es necesario
            while BlogCategory.objects.filter(slug=slug).exists():
                slug = f"{base_slug}-{counter}"
                counter += 1
            category.slug = slug
            category.save()

class Migration(migrations.Migration):

    dependencies = [
        ('home', '0001_initial'),
    ]

    operations = [
        # 1. Agregar el campo slug sin la restricción de unicidad
        migrations.AddField(
            model_name='blogcategory',
            name='slug',
            field=models.SlugField(blank=True, max_length=100),
        ),
        # 2. Poblar los slugs existentes
        migrations.RunPython(populate_blogcategory_slugs, reverse_code=migrations.RunPython.noop),
        # 3. Hacer el campo slug único (ahora que todos tienen valores únicos)
        migrations.AlterField(
            model_name='blogcategory',
            name='slug',
            field=models.SlugField(max_length=100, unique=True),
        ),
        # 4. Agregar los otros campos
        migrations.AddField(
            model_name='blogpost',
            name='structured_content',
            field=models.TextField(blank=True, help_text='Contenido estructurado en formato JSON (por ejemplo, lista de mitos)', null=True),
        ),
        migrations.AlterField(
            model_name='blogpost',
            name='content',
            field=models.TextField(help_text='Contenido principal del artículo'),
        ),
    ]